<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.module.problem.mapper.ProblemListMapper">
    
    <resultMap type="ProblemList" id="ProblemListResult">
        <result property="id"    column="id"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
        <result property="problemName"    column="problem_name"    />
        <result property="problemDetail"    column="problem_detail"    />
        <result property="problemNum"    column="problem_num"    />
    </resultMap>

    <sql id="selectProblemListVo">
        select id, create_by, create_time, update_by, update_time, remark, problem_name, problem_detail, problem_num from problem_list
    </sql>

    <select id="selectProblemListList" parameterType="ProblemList" resultMap="ProblemListResult">
        <include refid="selectProblemListVo"/>
        <where>  
            <if test="problemName != null  and problemName != ''"> and problem_name like concat('%', #{problemName}, '%')</if>
            <if test="problemDetail != null  and problemDetail != ''"> and problem_detail = #{problemDetail}</if>
            <if test="problemNum != null  and problemNum != ''"> and problem_num = #{problemNum}</if>
        </where>
    </select>
    
    <select id="selectProblemListById" parameterType="Long" resultMap="ProblemListResult">
        <include refid="selectProblemListVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertProblemList" parameterType="ProblemList" useGeneratedKeys="true" keyProperty="id">
        insert into problem_list
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
            <if test="problemName != null">problem_name,</if>
            <if test="problemDetail != null">problem_detail,</if>
            <if test="problemNum != null">problem_num,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
            <if test="problemName != null">#{problemName},</if>
            <if test="problemDetail != null">#{problemDetail},</if>
            <if test="problemNum != null">#{problemNum},</if>
         </trim>
    </insert>

    <update id="updateProblemList" parameterType="ProblemList">
        update problem_list
        <trim prefix="SET" suffixOverrides=",">
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="problemName != null">problem_name = #{problemName},</if>
            <if test="problemDetail != null">problem_detail = #{problemDetail},</if>
            <if test="problemNum != null">problem_num = #{problemNum},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteProblemListById" parameterType="Long">
        delete from problem_list where id = #{id}
    </delete>

    <delete id="deleteProblemListByIds" parameterType="String">
        delete from problem_list where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>